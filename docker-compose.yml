services:

  ### PostgreSQL: main DB
  postgres_main:
    image: postgres:16
    container_name: postgres_main
    environment:
      POSTGRES_DB: nrbproperties
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pg_main_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pipeline_net

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres_main:5432/nrbproperties?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres_main
    networks:
      - pipeline_net

 
  ### Airflow
  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: samwanyua/airflow-custom:latest
    container_name: airflow
    depends_on:
      postgres_main:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT: 300
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres_main:5432/nrbproperties
    volumes:
      - ./scraper:/opt/airflow/scraper
      - ./airflow_dags/dags:/opt/airflow/dags
      - ./notification:/opt/airflow/notification
      - airflow_logs:/opt/airflow/logs
      - airflow_db:/opt/airflow/db
      - ./airflow_dags/docker-entrypoint.sh:/entrypoint.sh
    entrypoint: /entrypoint.sh
    ports:
      - "8080:8080"
    networks:
      - pipeline_net

  ### Spark Master
  spark:
    image: bitnami/spark:3.5
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8081"
    volumes:
      - ./spark:/opt/spark-apps
      - ./postgresql-42.7.1.jar:/opt/spark-apps/postgresql-42.7.1.jar
    networks:
      - pipeline_net

  ### Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - pipeline_net

  ### Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin2
    networks:
      - pipeline_net

volumes:
  pg_main_data:
  airflow_logs:
  airflow_db:

networks:
  pipeline_net:
    driver: bridge
