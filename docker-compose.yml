
services:

  ###  PostgreSQL: raw_db
  postgres_raw:
    image: postgres:16
    container_name: raw_db
    environment:
      POSTGRES_DB: nrbproperties
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/raw_db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pipeline_net

  ### 🐘 PostgreSQL: clean_db 
  postgres_clean:
    image: postgres:16
    container_name: clean_db
    environment:
      POSTGRES_DB: clean_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./postgres/clean_db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pipeline_net

  ### Zookeeper 
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - pipeline_net

  ### Kafka 
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,DOCKER://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,DOCKER://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - pipeline_net

  ### Apache Airflow 
  airflow:
    image: apache/airflow:2.9.0
    container_name: airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://wanyua:password@postgres_raw:5432/raw_db
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    ports:
      - "8080:8080"
    depends_on:
      - postgres_raw
    command: >
      bash -c "airflow db migrate &&
               airflow users create --username admin --firstname Sam --lastname Wanyua --role Admin --email you@example.com --password admin &&
               airflow scheduler & airflow webserver"
    networks:
      - pipeline_net

  ###  Spark  
  spark:
    image: bitnami/spark:3.5
    container_name: spark
    environment:
      SPARK_MODE: standalone
    networks:
      - pipeline_net

  ### Elasticsearch 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - pipeline_net

  ###  Kibana 
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - pipeline_net

networks:
  pipeline_net:
    driver: bridge
